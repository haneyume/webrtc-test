{"version":3,"sources":["utils/sockets.js","pages/WebRTCView2.js","index.js"],"names":["socket","io","_default","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initialize","asyncToGenerator","regenerator_default","a","mark","_callee","mediaConstraints","pcConfiguration","wrap","_context","prev","next","on","data","receiveData","JSON","parse","audio","video","iceServers","urls","navigator","mediaDevices","getUserMedia","localStream","sent","localVideo","current","srcObject","pc","RTCPeerConnection","addStream","onicecandidate","event","candidate","sendData","onaddstream","remoteVideo","stream","oniceconnectionstatechange","console","log","iceConnectionState","state","setState","isCalling","stop","uninitialize","_callee2","_context2","off","_callee3","offer","_context3","createOffer","setLocalDescription","hangup","_callee4","_context4","close","_ref5","_callee5","chatUserId","_context5","emit","stringify","_x","_x2","apply","arguments","_ref6","_callee6","answer","_context6","undefined","addIceCandidate","setRemoteDescription","createAnswer","_x3","React","createRef","react_default","createElement","Container","Row","Button","color","onClick","ref","width","autoPlay","muted","Component","ReactDOM","render","WebRTCView2_default","document","getElementById"],"mappings":"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","file":"static/js/main.e20cb863.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\n\r\nconst socket = io('https://vvk954yznl.sse.codesandbox.io/');\r\n\r\nexport { socket };\r\n","import React from 'react';\nimport { Container, Row, Button } from 'reactstrap';\nimport { socket } from '../utils/sockets';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isCalling: false\n    };\n\n    this.localVideo = React.createRef();\n    this.remoteVideo = React.createRef();\n    this.localStream = null;\n    this.pc = null;\n  }\n\n  componentDidMount() {\n    this.initialize();\n  }\n\n  componentWillUnmount() {\n    this.uninitialize();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          {!this.state.isCalling && <Button color='success' onClick={this.call}>Call</Button>}\n          {this.state.isCalling && <Button color='danger' onClick={this.hangup}>Hangup</Button>}\n        </Row>\n\n        <Row>\n          <video ref={this.localVideo} width='300' autoPlay muted />\n          <video ref={this.remoteVideo} width='300' autoPlay />\n        </Row>\n      </Container >\n    );\n  }\n\n  initialize = async () => {\n    socket.on('chatAudio-signaling', (data) => this.receiveData(JSON.parse(data)));\n\n    const mediaConstraints = {\n      'audio': true,\n      'video': false\n    };\n\n    const pcConfiguration = {\n      'iceServers': [\n        { 'urls': 'stun:stun.l.google.com:19302' }\n      ]\n    };\n\n    this.localStream = await navigator.mediaDevices.getUserMedia(mediaConstraints);\n\n    this.localVideo.current.srcObject = this.localStream;\n\n    this.pc = new RTCPeerConnection(pcConfiguration);\n\n    this.pc.addStream(this.localStream);\n\n    this.pc.onicecandidate = (event) => {\n      if (event.candidate) {\n        this.sendData('', event.candidate);\n      }\n    };\n\n    this.pc.onaddstream = (event) => {\n      this.remoteVideo.current.srcObject = event.stream;\n    };\n\n    this.pc.oniceconnectionstatechange = () => {\n      console.log(this.pc ? this.pc.iceConnectionState : '...');\n\n      if (!this.pc) {\n        return;\n      }\n\n      let state = this.pc.iceConnectionState;\n      if (state === 'connected' || state === 'completed') {\n        this.setState({ isCalling: true });\n      }\n    };\n  };\n\n  uninitialize = async () => {\n    socket.off('chatAudio-signaling');\n  };\n\n  call = async () => {\n    const offer = await this.pc.createOffer();\n\n    await this.pc.setLocalDescription(offer);\n\n    this.sendData('', offer);\n\n    this.setState({ isCalling: true });\n  };\n\n  hangup = async () => {\n    this.pc.close();\n    this.pc = null;\n\n    this.setState({ isCalling: false });\n\n    this.initialize();\n  };\n\n  sendData = async (chatUserId, data) => {\n    socket.emit('chatAudio-signaling', {\n      chatUserId: chatUserId,\n      data: JSON.stringify(data)\n    });\n  };\n\n  receiveData = async (data) => {\n    if (data['type'] === undefined) {\n      await this.pc.addIceCandidate(data);\n    }\n    else if (data['type'] === 'offer') {\n      await this.pc.setRemoteDescription(data);\n\n      const answer = await this.pc.createAnswer();\n\n      await this.pc.setLocalDescription(answer);\n\n      this.sendData('', answer);\n    }\n    else if (data['type'] === 'answer') {\n      await this.pc.setRemoteDescription(data);\n    }\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n//import Home from './pages/Home';\n//import P1 from './pages/P1';\n//import P2 from './pages/P2';\n//import WebRTCView from './pages/WebRTCView';\nimport WebRTCView2 from './pages/WebRTCView2';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n/*const App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/' exact component={Home} />\n        <Route path='/p1' component={P1} />\n        <Route path='/p2' component={P2} />\n        <Route path='/webrtc' component={WebRTCView} />\n      </Switch>\n    </BrowserRouter>\n  );\n};*/\n\nconst App = () => {\n  return <WebRTCView2 />\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}