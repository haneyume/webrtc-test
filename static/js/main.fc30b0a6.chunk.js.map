{"version":3,"sources":["components/SignalingChannel.js","components/WebRTCView.js","index.js"],"names":["socket","SignalingChannelSocketio","io","on","console","log","data","emit","JSON","stringify","callback","SignalingChannel","init","send","receive","WebRTCView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","iceConnectionState","localVideo","React","createRef","remoteVideo","pc","receiveSignalData","bind","start","react_default","a","createElement","View","style","justifyContent","alignItems","marginBottom","Text","fontSize","fontWeight","flexDirection","ref","width","autoPlay","muted","TouchableOpacity","backgroundColor","margin","padding","borderRadius","onPress","color","hangup","_this2","RTCPeerConnection","iceServers","urls","setState","onicecandidate","event","candidate","onaddstream","current","srcObject","stream","oniceconnectionstatechange","navigator","mediaDevices","getUserMedia","audio","video","then","addStream","createOffer","offer","setLocalDescription","sdp","localDescription","close","undefined","msg","parse","addIceCandidate","RTCIceCandidate","type","setRemoteDescription","RTCSessionDescription","createAnswer","answer","Component","App","flex","WebRTCView_WebRTCView","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.fc30b0a6.chunk.js","sourcesContent":["import io from 'socket.io-client';\n\nconst useSocketio = true;\nlet socket = null;\n\nconst SignalingChannelSocketio = {\n\tinit() {\n\t\t//socket = io('http://35.229.222.96:3000');\n\t\tsocket = io('https://vvk954yznl.sse.codesandbox.io/');\n\t\tsocket.on('connect', () => console.log('connect'));\n\t},\n\n\tsend(data) {\n\t\tsocket.emit('x', JSON.stringify(data));\n\t},\n\n\treceive(callback) {\n\t\tsocket.on('x', (data) => callback(data));\n\t}\n};\n\nconst SignalingChannelFirebase = {\n\tinit() {\n\n\t},\n\n\tsend(data) {\n\n\t},\n\n\treceive(callback) {\n\n\t}\n};\n\nconst SignalingChannel = {\n\tinit() {\n\t\t(useSocketio === true) ? SignalingChannelSocketio.init() : SignalingChannelFirebase.init();\n\t},\n\n\tsend(data) {\n\t\t(useSocketio === true) ? SignalingChannelSocketio.send(data) : SignalingChannelFirebase.send(data);\n\t},\n\n\treceive(callback) {\n\t\t(useSocketio === true) ? SignalingChannelSocketio.receive(callback) : SignalingChannelFirebase.receive(callback);\n\t}\n};\n\nexport default SignalingChannel;\n","import React, { Component } from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\n\nimport SignalingChannel from './SignalingChannel';\n\nexport default class WebRTCView extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\ticeConnectionState: '',\n\t\t};\n\n\t\tthis.localVideo = React.createRef();\n\t\tthis.remoteVideo = React.createRef();\n\n\t\tthis.pc = null;\n\t}\n\n\tcomponentDidMount() {\n\t\tSignalingChannel.init();\n\t\tSignalingChannel.receive(this.receiveSignalData.bind(this));\n\n\t\tthis.start();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<View style={{ justifyContent: 'center', alignItems: 'center', marginBottom: 20 }}>\n\t\t\t\t\t<Text style={{ fontSize: 20, fontWeight: 'bold' }}>WebRTC</Text>\n\t\t\t\t\t<Text>{'state: ' + this.state.iceConnectionState}</Text>\n\t\t\t\t</View>\n\n\t\t\t\t<View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n\t\t\t\t\t<video ref={this.localVideo} width='500' autoPlay muted />\n\n\t\t\t\t\t<video ref={this.remoteVideo} width='500' autoPlay />\n\t\t\t\t</View>\n\n\t\t\t\t<View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tstyle={{ backgroundColor: 'lightgray', margin: 20, padding: 10, borderRadius: 10 }}\n\t\t\t\t\t\tonPress={this.call.bind(this)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text style={{ color: 'white' }}>{'Call'}</Text>\n\t\t\t\t\t</TouchableOpacity>\n\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tstyle={{ backgroundColor: 'lightgray', margin: 20, padding: 10, borderRadius: 10 }}\n\t\t\t\t\t\tonPress={this.hangup.bind(this)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text style={{ color: 'white' }}>{'hangup'}</Text>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n\n\tstart() {\n\t\tconst configuration = { iceServers: [{ urls: 'stun:stun.l.google.com:19302' }] };\n\n\t\tthis.pc = new RTCPeerConnection(configuration);\n\n\t\tthis.setState({\n\t\t\ticeConnectionState: this.pc.iceConnectionState\n\t\t});\n\n\t\tthis.pc.onicecandidate = (event) => {\n\t\t\tif (event.candidate) {\n\t\t\t\tSignalingChannel.send({ candidate: event.candidate });\n\t\t\t}\n\t\t};\n\n\t\tthis.pc.onaddstream = (event) => {\n\t\t\tthis.remoteVideo.current.srcObject = event.stream;\n\t\t};\n\n\t\tthis.pc.oniceconnectionstatechange = (event) => {\n\t\t\tthis.setState({\n\t\t\t\ticeConnectionState: this.pc.iceConnectionState\n\t\t\t});\n\t\t};\n\n\t\tnavigator.mediaDevices.getUserMedia({ 'audio': true, 'video': true }).then((stream) => {\n\t\t\tthis.localVideo.current.srcObject = stream;\n\n\t\t\tthis.pc.addStream(stream);\n\t\t});\n\t}\n\n\tasync call() {\n\t\tconst offer = await this.pc.createOffer();\n\n\t\tawait this.pc.setLocalDescription(offer);\n\n\t\tSignalingChannel.send({ sdp: this.pc.localDescription });\n\t}\n\n\tasync hangup() {\n\t\tthis.pc.close();\n\t\t//this.pc = null;\n\t}\n\n\tasync receiveSignalData(data) {\n\t\tconst msg = JSON.parse(data);\n\n\t\tif (msg.candidate !== undefined) {\n\t\t\tthis.pc.addIceCandidate(new RTCIceCandidate(msg.candidate));\n\t\t}\n\t\telse if (msg.sdp.type === 'offer') {\n\t\t\tthis.pc.setRemoteDescription(new RTCSessionDescription(msg.sdp));\n\n\t\t\tconst answer = await this.pc.createAnswer();\n\n\t\t\tawait this.pc.setLocalDescription(answer);\n\n\t\t\tSignalingChannel.send({ sdp: this.pc.localDescription });\n\t\t}\n\t\telse if (msg.sdp.type === 'answer') {\n\t\t\tthis.pc.setRemoteDescription(new RTCSessionDescription(msg.sdp));\n\t\t}\n\t}\n}\n","import React, { Component } from 'react';\nimport { AppRegistry, View } from 'react-native';\n\nimport WebRTCView from './components/WebRTCView'\n\nimport './main.css';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n\t\t\t\t<WebRTCView />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nAppRegistry.registerComponent('app', () => App);\nAppRegistry.runApplication('app', { rootTag: document.getElementById('root') });\n"],"sourceRoot":""}